//===== rAthena Script ======================================= 
//= Banker Script 
//===== By: ================================================== 
//= Syrus22 (1.0)
//===== Current Version: ===================================== 
//= 2.0
//===== Compatible With: ===================================== 
//= rAthena Project
//===== Description: ========================================= 
//= An account wide Banker to store Zeny
//===== Additional Comments: ================================= 
//= Syrus22 - There's an optional transaction fee at the top of
//= the script. To use it simply change the first set command
//= to set the cost variable to whatever you want the fee to be.
//= Version 2.0: Optimized and brought the script up to standard. [Jguy]
//============================================================ 

iz_ac02,120,206,5	script	Banquier	109,{
	set @cost,500;
	mes "[Banquier]";
	mes "Bienvenue à la Première Banque de l'academie. Comment puis-je vous aider aujourd'hui ?";
	next;
	switch(select("Je voudrais faire un dépôt.:Je voudrais faire un retrait.:Quel est mon solde actuel ?:Annuler")) {
	case 1:
		mes "[Banquier]";
		mes "Très bien... Combien souhaitez-vous déposer ? Le maximum que vous pouvez déposer en une fois est de 999 999 Zeny.";
		next;
		if (@cost > 0) {
			mes "[Banquier]";
			mes "Oh, et sachez qu'il y a des frais de " +@cost + " Zeny pour toutes les transactions !";
			next;
		}
		input @deposit;
		if (@deposit < 1) {
			mes "Assurez-vous de me demander de déposer un montant réel.";
			close;
		}
		else if (@deposit > Zeny) {
			mes "Il semble que vous n'ayez pas la quantité de zeny que vous essayez de déposer !";
			close;
		}
		else if (@deposit > (Zeny - @cost)) {
			mes "Vous avez besoin de " + @cost + " Zeny pour couvrir les frais de transaction !";
			close;
		}
		else {
			set Zeny,Zeny - @deposit;
			set Zeny,Zeny - @cost;
			set #bankstorage,#bankstorage + @deposit;
			mes "[Banquier]";
			mes "Merci beaucoup... Votre zeny est entre de bonnes mains.";
			close;
		}
	case 2:
		mes "[Banquier]";
		mes "Très bien... Combien souhaitez-vous retirer ? Le maximum que vous pouvez retirer en une fois est de 999 999 Zeny";
		next;
		if (@cost > 0) {
			mes "[Banquier]";
			mes "Oh, et sachez qu'il y a des frais de " +@cost + " Zeny pour toutes les transactions !";
			next;
		}
		input @withdrawl;
		if (@withdrawl < 1) {
			mes "S'il vous plaît, ne jouez pas. J'ai besoin d'un montant réel pour le retrait.";
			close;
		}
		else if (@withdrawl > #bankstorage) {
			mes "Vous avez seulement ^00FF00" + callfunc("F_InsertComma",#bankstorage) +"^000000 zeny sur votre compte !";
			close;
		}
		else if ((@cost > Zeny) && ((Zeny + @withdrawl) > @cost)) {
			mes "[Banquier]";
			mes "Vous n'avez pas les Zeny pour les frais de transaction actuellement. Voulez-vous que je retire les frais directement de votre retrait ?";
			next;
			switch(select("Oui s'il vous plaît.:Non, merci")){
			case 1:
				mes "[Banquier]";
				mes "Je retire " + @cost + " de votre retrait pour couvrir les frais de dépôt...";
				set @withdrawl,@withdrawl - @cost;
				set #bankstorage,#bankstorage - @cost;
				set @cost,0;
				next;
				set Zeny,Zeny - @cost;
				set Zeny,Zeny + @withdrawl;
				set #bankstorage,#bankstorage - @withdrawl;
				mes "[Banquier]";
				mes "Voilà votre Zeny. Bonne journée.";
				close;
			case 2:
				mes "[Banquier]";
				mes "Très bien... revenez bientôt.";
				close;
			}
		}
		else {
			set Zeny,Zeny - @cost;
			set Zeny,Zeny + @withdrawl;
			set #bankstorage,#bankstorage - @withdrawl;
			mes "[Banquier]";
			mes "Voilà votre Zeny. Bonne journée.";
			close;
		}
	case 3:
		mes "[Banquier]";
		mes "Hmmmm... laissez-moi vérifier quelques papiers.";
		next;
		mes "*Bruissement, Bruissement*";
		next;
		mes "[Banquier]";
		mes "Vous avez actuellement " + callfunc("F_InsertComma",#bankstorage) + " Zeny sur votre compte.";
		close;
	case 4:
		mes "[Banquier]";
		mes "Très bien... revenez bientôt.";
		close;
	}
}
