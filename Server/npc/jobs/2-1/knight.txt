//===== rAthena Script ======================================= 
//= Knight Job Quest
//===== By: ================================================== 
//= PGRO TEAM (Aegis).
//= Converted by kobra_k88
//= Further bugfixed and tested by Lupus
//===== Current Version: ===================================== 
//= 3.3
//===== Compatible With: ===================================== 
//= rAthena Project
//===== Description: ========================================= 
//= [Official Conversion]
//= Job Change quest for Knight class.
//===== Additional Comments: ================================= 
//= 1.0 Fully working.  Please comment out any pre-existing warps for the
//= test rooms in any other files so that the ones specified here can work.
//= 1.1 Fixed a major bug.  Now using the initnpctimer command,
//= donpcevent, and new waitingroom event commands.  No more addtimer
//= spamming.  No longer have to talk to the npc to take the test.  Just enter the chat room.
//= 1.2 More bug fixes.  Changed global variable names to unique ones.
//= Added second set of items to first test. Added Awake pots award for job change.
//= 1.3 Added Baby Class support [Lupus]
//= 1.5 Fixed possible EXP abuse [Lupus]
//= 1.6 Added a func which prevent advanced classes passing
//= 2nd Job Quests again. It also guides adv classes where
//= to go. [Lupus]
//= 2.0 Changed numbers to constants. [Vicious]
//= 2.1 Merged JFunc [Lupus]
//= 2.2 Rescripted to Aegis 10.3 standards. [L0ne_W0lf]
//= 2.3 Several bugfixes with the help of Barron-Monster. [L0ne_W0lf]
//= 2.4 Minor fixes to timer#knt. [L0ne_W0lf]
//= 2.5 Fixes a small bug with making claymores. [L0ne_W0lf]
//=     Corrected usages of killmonster and killmonsterall.
//= 2.6 Corrected an improper areawarp destination. [L0ne_W0lf]
//= 2.7 Deleted unused variables. [Samuray22]
//= 2.7a Corrected a Typo error ";;". [Samuray22]
//= 2.8 Now uses enable and disable waitingroomevent. [L0ne_W0lf]
//= 2.9 Added Quest Log commands. [Kisuka]
//= 3.0 Removed the need for use of 'goto.' [L0ne_W0lf]
//= 3.1 Modified the quest to renewal. [Vali] (Thanks to Muad_Dib for the necessary info).
//= 3.2 More Renewal updates and some optimization. [Euphy]
//= 3.3 Fixed missing changequest. [Joseph]
//============================================================ 

prt_in,88,101,4	script	Chivalry Captain#knt	56,{
	mes "[Capitaine Herman]";
	if (Upper == 1) {
		mes "Hm ? Tu es... Qu'est-ce qui te concerne ? J'ai été un chevalier honorable pendant longtemps, mais je ne peux pas comprendre ce sentiment que j'ai en te voyant...";
		next;
		mes "[Capitaine Herman]";
		mes "Que Dieu bénisse ton corps et ton âme, guerrier. J'espère que tu montreras ton courage et protégeras ceux qui sont plus faibles que toi.";
		close;
	}
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "Ah, un membre de notre Chevalerie.";
			mes "J'espère que tu es à la hauteur de mes attentes. Nous avons juré d'être forts pour notre royaume, même si la mort est imminente...";
			close;
		} else if (BaseClass == Job_Novice) {
			mes "Bienvenue,";
			mes "c'est la";
			mes "Chevalerie de Prontera.";
			mes "Qu'est-ce qui t'amène ici ?";
			next;
			switch(select("Je veux changer de classe pour devenir Swordman.:Je veux changer de classe pour devenir Knight.:Juste de passage.")) {
			case 1:
				mes "[Capitaine Herman]";
				mes "A-ha~";
				mes "Un Swordman, tu dis ?";
				mes "Je suis désolé, "+((Sex==SEX_MALE)?"jeune homme":"jeune fille")+", mais tu";
				mes "t'es trompé d'endroit !";
				next;
				mes "[Capitaine Herman]";
				mes "Ce n'est pas la guilde des Swordman, c'est la Chevalerie de Prontera ! Si tu veux devenir Swordman, va à la guilde des Swordman située à Izlude.";
				close;
			case 2:
				mes "[Capitaine Herman]";
				mes "Ah, je vois que tu as une grande ambition. Mais tu dois d'abord devenir Swordman avant de devenir";
				mes "un Knight. Un pas à la fois...";
				next;
				mes "[Capitaine Herman]";
				mes "D'abord, visite la guilde des Swordman à Izlude. Ensuite, reviens nous voir une fois que tu seras devenu un Swordman bien expérimenté.";
				close;
			case 3:
				mes "[Capitaine Herman]";
				mes "Aha~";
				mes "Tu dois avoir beaucoup de temps libre. Pourquoi n'irais-tu pas chasser des monstres au lieu de te promener sans but ?";
				close;
			}
		} else {
			mes "Bienvenue. Nous, les fiers chevaliers de la Chevalerie de Prontera, donnerons nos vies pour le roi et le pays ! Profite bien de ton séjour.";
			close;
		}
	}
	if (KNIGHT_Q == 0) {
		mes "Bienvenue, c'est";
		mes "la Chevalerie de Prontera.";
		mes "Qu'est-ce qui t'amène ici ?";
		next;
		if (select("Je veux changer de classe pour devenir Knight.:Juste de passage.") == 1) {
			mes "[Capitaine Herman]";
			mes "Ohh...";
			mes "Un jeune "+((Sex==SEX_MALE)?"homme":"femme")+" qui souhaite";
			mes "devenir un Knight !";
			mes "Notre Chevalerie de Prontera";
			mes "te soutiendra.";
			next;
			mes "[Capitaine Herman]";
			mes "Tout d'abord, je suis le capitaine de la Chevalerie de Prontera, Herman Phon Efesirsus. Je suis ravi de rencontrer des jeunes gens désireux de rejoindre la Chevalerie de Prontera.";
			next;
			mes "[Capitaine Herman]";
			mes "Nous n'acceptons que les Swordmen";
			mes "qui sont au moins Job Level 40.";
			mes "Nous ne pouvons pas considérer les candidats qui ne sont pas encore assez expérimentés pour devenir des Knights.";
			next;
			mes "[Capitaine Herman]";
			mes "Une fois que tu postules, et que nous te trouvons éligible, nous commencerons la procédure de changement de classe. Souhaites-tu";
			mes "postuler maintenant ?";
			next;
			if (select("Oui, je veux postuler.:Je voudrais y réfléchir s'il te plaît.") == 1) {
				mes "[Capitaine Herman]";
				if (JobLevel < 40) {
					mes "Ah, tu n'es pas encore prêt à devenir un Knight ! N'ai-je pas mentionné spécifiquement le niveau de Job 40 requis ?";
					next;
					mes "[Capitaine Herman]";
					mes "Bien sûr, je comprends ta forte envie de nous rejoindre, mais ce n'est pas encore le moment. Va combattre d'autres monstres. Nous t'attendrons ici.";
					close;
				}
				if (SkillPoint) {
					mes "Ah...!";
					mes "Tu ne peux pas changer de classe si tu as des points de compétence inutilisés. Reviens lorsque tu auras utilisé";
					mes "tous tes points de compétence.";
					close;
				}
				set KNIGHT_Q,1;
				setquest 9000;
				mes "Laisse-moi voir...";
				mes "Ton nom est";
				mes strcharinfo(0) + "...";
				mes "C'est bien ça ?";
				next;
				mes "[Capitaine Herman]";
				mes "Laisse-moi t'expliquer la procédure de changement de classe. Tu dois visiter une série de Knights et réussir chacun de leurs tests.";
				next;
				mes "[Capitaine Herman]";
				mes "Une fois que tous les tests sont terminés, chaque Knight impliqué dans ton évaluation se réunira et discutera de ta performance.";
				next;
				mes "[Capitaine Herman]";
				mes "Les Knights doivent tous t'approuver à l'unanimité avant que tu puisses rejoindre la Chevalerie de Prontera. Si une seule personne s'oppose, tu dois";
				mes "recommencer.";
				next;
				mes "[Capitaine Herman]";
				mes "Mais je crois que si tu persistes avec un cœur sincère, tu seras reconnu par les Knights et finalement accepté comme membre de notre Chevalerie.";
				next;
				mes "[Capitaine Herman]";
				mes "Alors, ne perdons pas plus de temps à parler ! Va rencontrer ces Knights et commence leurs tests. Une fois que tu as terminé tous les tests, reviens me voir.";
				close;
			}
			mes "[Capitaine Herman]";
			mes "Oh...!";
			mes "Eh bien, je ne veux pas te presser. Prends ton temps et réfléchis-y. Reviens quand tu seras prêt à";
			mes "changer de classe, car nous t'attendrons.";
			close;
		}
		mes "[Capitaine Herman]";
		mes "En y réfléchissant bien, n'es-tu pas un Swordman ? On dirait que tu as rencontré de nombreux ennemis au combat.";
		next;
		mes "[Capitaine Herman]";
		mes "Tu devrais envisager de changer de classe pour devenir Knight. Viens me parler si ça t'intéresse.";
		next;
		mes "[Capitaine Herman]";
		mes "S'il te plaît, prends";
		mes "ton temps pour";
		mes "regarder autour.";
		mes "Bonne journée.";
		close;
	}
	else if (KNIGHT_Q == 1) {
		mes "Mmm ?";
		mes strcharinfo(0) + ",";
		mes "que puis-je faire pour toi ?";
		mes "Ah, tu ne sais pas";
		mes "qui visiter ?";
		next;
		mes "[Capitaine Herman]";
		mes "Je crois que les Knights en charge des tests ont établi un ordre que tu dois suivre pour les visiter. Je suppose que cela aide au processus de test.";
		next;
		mes "[Capitaine Herman]";
		mes "D'abord, va rendre visite à";
		mes "Sir Andrew pour ton premier test. Ne sois pas trop nerveux, il t'expliquera tout une fois que tu lui parleras.";
		close;
	}
	else if (KNIGHT_Q == 2) callsub L_Mission,0;
	else if (KNIGHT_Q == 3) callsub L_Mission,0;
	else if (KNIGHT_Q == 4) {
		callsub L_Mission,1;
		mes "Il semble que tu aies terminé un test. Voyons. Sir Andrew, quel Swordman doit visiter ensuite ?";
		next;
		mes "[Sir Andrew]";
		mes "J'ai dit de";
		mes "visiter Sir Siracuse.";
		mes "Drôle, je pensais t'avoir dit.";
		mes "Ai-je oublié... ?";
		next;
		mes "[Capitaine Herman]";
		mes "As-tu entendu ?";
		mes "Va voir Sir Siracuse et passe son test. Une fois que tu auras terminé son test, n'oublie pas qui tu dois visiter ensuite également.";
		close;
	}
	else if (KNIGHT_Q == 5) callsub L_Mission,0;
	else if (KNIGHT_Q == 6) {
		callsub L_Mission,1;
		mes "Voyons voir...";
		mes "Tu as terminé deux tests.";
		mes "Sir Siracuse, quel Swordman doit visiter ensuite ?";
		next;
		mes "[Sir Siracuse]";
		mes "Oh... !";
		mes "Euh, qui était ensuite... ?";
		mes "C'est vrai ! Sir Windsor !";
		next;
		mes "[Capitaine Herman]";
		mes "Dirige-toi vers";
		mes "Sir Windsor Benedict pour ton prochain test. Écoute attentivement les Knights en charge des tests pour ne pas te sentir perdu, d'accord ?";
		close;
	}
	else if (KNIGHT_Q == 7) callsub L_Mission,0;
	else if (KNIGHT_Q == 8) {
		callsub L_Mission,1;
		mes "Sir Windor... ?";
		mes "Qui doit ce";
		mes "Swordman visiter";
		mes "ensuite ?";
		next;
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...";
		mes "......";
		next;
		mes "[Sir Windsor]";
		mes "...Amy Beatrice.";
		next;
		mes "[Capitaine Herman]";
		mes "Ah, va rendre visite";
		mes "à Lady Amy et passe son test. Assure-toi de faire attention à qui tu dois aller pour ton prochain test.";
		close;
	}
	else if (KNIGHT_Q == 9) callsub L_Mission,0;
	else if (KNIGHT_Q == 10) {
		callsub L_Mission,1;
		mes "Voyons voir...";
		mes "Lady Amy, qui";
		mes "doit ce Swordman";
		mes "visiter ensuite ?";
		next;
		mes "[Lady Amy]";
		mes "Oh...";
		mes "J'ai dit de visiter";
		mes "Sir Edmond !";
		mes "Tee hee~";
		next;
		mes "[Capitaine Herman]";
		mes "Maintenant, va parler";
		mes "à Sir Edmond. Il sera";
		mes "responsable de ton";
		mes "prochain test.";
		close;
	}
	else if (KNIGHT_Q == 11) callsub L_Mission,0;
	else if (KNIGHT_Q == 12) {
		callsub L_Mission,1;
		mes "Ne te reste-t-il pas seulement à visiter une personne ?";
		mes "Le chevalier en";
		mes "charge du dernier test";
		mes "est Sir Gray Prospheiro.";
		next;
		mes "[Sir Edmond]";
		mes "Ce monde fonctionne selon";
		mes "la loi de la cause et de l'effet.";
		mes "Tout sera révélé à la fin.";
		next;
		mes "[Capitaine Herman]";
		mes "Sois vigilant et fais";
		mes "de ton mieux, car c'est";
		mes "le dernier test.";
		next;
		mes "[Capitaine Herman]";
		mes "Reviens vers moi";
		mes "une fois que tu auras";
		mes "terminé le";
		mes "dernier test.";
		close;
	}
	else if (KNIGHT_Q == 13) {
		mes "Termine le dernier test.";
		mes "Une fois cela terminé, tous les chevaliers impliqués dans ton test se réuniront, et nous évaluerons ta performance.";
		close;
	}
	else if (KNIGHT_Q == 14) {
		if (SkillPoint) {
			mes "Oh...!";
			mes "Vous ne pouvez pas changer de job si vous avez des points de compétence inutilisés. Revenez une fois que vous avez distribué tous vos points de compétence.";
			close;
		}
		mes "Oh, avez-vous terminé tous les tests ? Mais tout le monde qui termine les tests ne peut";
		mes "devenir un Chevalier.";
		next;
		mes "[Capitaine Herman]";
		mes "Pendant le test, nous évaluons votre loyauté, votre honneur et votre force. Nous vérifions également si vous avez été courtois et si vous connaissez la valeur de la modestie et de la révérence.";
		next;
		mes "[Capitaine Herman]";
		mes "À travers ce processus, j'ai également observé vos actions. Les opinions des sept d'entre nous seront reflétées dans la décision de votre changement de job.";
		next;
		mes "[Capitaine Herman]";
		mes "Ensuite...";
		mes "Écoutons";
		mes "les pensées de chacun !";
		mes "Andrew, qu'en penses-tu ?";
		next;
		mes "[Sir Andrew]";
		if (JobLevel == 50) {
			mes "Que puis-je dire ?";
			mes "J'approuve !";
			mes "Avoir vécu en tant que";
			mes "Épéiste jusqu'à présent";
			mes "suffit.";
		}
		else {
			mes "Celui-ci a";
			mes "rassemblé des objets";
			mes "qui sont difficiles";
			mes "à obtenir. J'approuve !";
			mes "Je crois que "+((Sex==SEX_MALE)?"":"elle")+" restera fidèle après être devenu un Chevalier.";
		}
		next;
		mes "[Capitaine Herman]";
		mes "Hmm.";
		mes "Quelle belle critique.";
		mes "Siracuse, qu'en est-il de toi ?";
		next;
		mes "[Sir Siracuse]";
		mes "Heh, très bien. Pas tout à fait ce que";
		mes "je voudrais, mais espérons que cela s'améliorera à l'avenir.";
		next;
		mes "[Sir Siracuse]";
		mes "Après être devenu un Chevalier, vous devez bâtir une bonne réputation grâce à l'honneur. Ehh... J'approuve.";
		next;
		mes "[Capitaine Herman]";
		mes "D'accord...";
		mes "Windsor,";
		mes "et toi ?";
		next;
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...";
		mes "......";
		next;
		mes "[Sir Windsor]";
		mes "....Approuvé.";
		next;
		mes "[Capitaine Herman]";
		mes "Je ne pense pas";
		mes "qu'il désapprouve.";
		mes "Alors, écoutons";
		mes "l'opinion d'Amy.";
		next;
		mes "[Lady Amy]";
		if (Sex == SEX_MALE) {
			mes "Mmm~ Il est si poli !";
			mes "Il grandira pour devenir un merveilleux Chevalier. Et il a des joues si mignonnes~ Hi hi !";
		}
		else {
			mes "Mmm~ Elle devrait être géniale !";
			mes "Elle est très courtoise et aussi très mignonne, alors quelques points de plus ! Heh~";
			mes "Je ne devrais pas dire des choses comme ça !";
		}
		next;
		mes "[Capitaine Herman]";
		mes "Eh bien...";
		mes "Une critique étrange,";
		mes "mais je crois";
		mes "qu'elle approuve.";
		mes "Edmond, dis";
		mes "ce que tu penses.";
		next;
		mes "[Sir Edmond]";
		if (Sex == SEX_MALE) {
			mes "Il semble un peu brut, mais quelque chose de lumineux brille en lui. Avec du polissage et du raffinement, sa véritable valeur brillera";
			mes "comme le soleil.";
		}
		else {
			mes "C'est difficile à voir, mais il y a une beauté spirituelle en elle. Avec du polissage et du raffinement, sa véritable valeur brillera aussi";
			mes "resplendissamment que la lune.";
		}
		next;
		mes "[Capitaine Herman]";
		mes "Enfin...";
		mes "Gray. J'aimerais";
		mes "connaître tes pensées.";
		next;
		mes "[Gray]";
		mes "Un jeune "+((Sex==SEX_MALE)?"gentleman":"demoiselle")+" venant ici avec la détermination de devenir un Chevalier suffit...";
		next;
		mes "[Capitaine Herman]";
		mes "Tout le monde";
		mes "a approuvé.";
		mes "Personne n'a été opposé.";
		mes "Alors je vais vous dire";
		mes "mon avis.";
		next;
		mes "[Capitaine Herman]";
		mes "Ma décision est...";
		next;
		mes "[Capitaine Herman]";
		mes "J'approuve.";
		next;
		mes "[Capitaine Herman]";
		mes "Vous n'avez peut-être pas terminé tous les tests parfaitement, mais vous avez toutes les qualités nécessaires pour devenir";
		mes "un Chevalier.";
		next;
		completequest 9012;
		callfunc "Job_Change", Job_Knight;
		callfunc "F_ClearJobVar"; // Efface toutes les variables de job pour le joueur actuel
		atcommand "@joblvlup 5";
		mes "[Capitaine Herman]";
		mes "Je déclare par la présente";
		mes "que vous êtes membre de";
		mes "la Chevalerie de Prontera.";
		mes "Protégez les faibles et";
		mes "vivez avec honneur.";
		next;
		getitem 656,7; // Potion d'éveil
		mes "[Capitaine Herman]";
		mes "Oh...";
		mes "Nous avons préparé un petit cadeau pour vous féliciter de votre changement de job. Veuillez l'utiliser lorsque vous êtes en combat tout en protégeant honorablement les autres.";
		next;
		mes "[Capitaine Herman]";
		mes "Allez !";
		mes "L'avenir de";
		mes "Rune-Midgarts";
		mes "repose sur vos";
		mes "épaules !";
		close;
	}
L_Mission:
	mes "Mmm ?";
	mes "Épéiste " + strcharinfo(0) + ".";
	mes "Comment se passent les tests ?";
	if (getarg(0)) {
		mes "Ah~ Tu ne sais pas";
		mes "qui visiter ensuite ?";
		next;
		mes "[Capitaine Herman]";
		return;
	} else {
		mes "Cela peut être difficile,";
		mes "mais fais de ton mieux.";
		close;
	}
}

prt_in,75,107,4	script	Sir Andrew#knt	65,{
	mes "[Sir Andrew]";
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "Tu dois être";
			mes "membre de";
			mes "la Chevalerie.";
			mes "Comment ça va ?";
			next;
			mes "[Sir Andrew]";
			mes "Tu dois travailler assidûment pour récolter de la nourriture ainsi que pour économiser des zeny pour acheter de l'équipement. Économise tout ce que tu";
			mes "trouves au combat, même la plus petite Jellopy.";
			next;
			mes "[Sir Andrew]";
			mes "Mais il n'est pas bon";
			mes "d'être trop avide.";
			mes "Après tout, nous sommes des Chevaliers.";
			close;
		}
		else if (BaseClass == Job_Novice) {
			mes "Salut,";
			mes "petit Novice.";
			mes "Bienvenue dans la";
			mes "Chevalerie de Prontera.";
			next;
			mes "[Sir Andrew]";
			mes "Tu pourrais penser que tu es";
			mes "faible en ce moment, mais un jour";
			mes "tu deviendras plus fort.";
			next;
			mes "[Sir Andrew]";
			mes "Rêve d'un avenir radieux et avance sur le chemin que tu choisis.";
			close;
		}
		else {
			mes "Nous, les membres de la";
			mes "Chevalerie de Prontera, faisons de notre mieux pour protéger la paix dans ce monde.";
			next;
			mes "[Sir Andrew]";
			mes "Même pendant les batailles auxquelles nous faisons face chaque jour, nous rêvons d'un";
			mes "avenir radieux qui est à venir.";
			close;
		}
	}
	if (KNIGHT_Q == 0) {
		mes "Nous, les membres de la";
		mes "Chevalerie de Prontera, faisons de notre mieux pour protéger la paix dans ce monde.";
		next;
		mes "[Sir Andrew]";
		mes "Même pendant les batailles auxquelles nous faisons face chaque jour, nous rêvons d'un";
		mes "avenir radieux qui est à venir.";
		close;
	}
	else if (KNIGHT_Q == 1) {
		mes "Bonjour.";
		mes "Puis-je vous aider";
		mes "en quelque chose ?";
		next;
		if (select("Je voudrais passer le test. : Oh, rien.") == 1) {
			mes "[Sir Andrew]";
			mes "Ah...";
			mes "Vous souhaitez";
			mes "devenir un Chevalier.";
			mes "Votre nom est";
			mes strcharinfo(0) + ",";
			mes "n'est-ce pas ?";
			next;
			mes "[Sir Andrew]";
			mes "Je suis un Chevalier de";
			mes "la Chevalerie de Prontera,";
			mes "Andrew Shylock.";
			mes "Je suis en charge de";
			mes "votre premier test.";
			next;
			mes "[Sir Andrew]";
			mes "Je vais tester votre sens de la loyauté. Chaque Chevalier doit posséder cette vertu. Pour cet examen, vous allez rassembler des récompenses";
			mes "du champ de bataille.";
			next;
			if (JobLevel == 50) {
				mes "[Sir Andrew]";
				mes "Mmm...?";
				mes "Attends un instant.";
				mes "On dirait que tu as";
				mes "maîtrisé le métier";
				mes "d'Épéiste.";
				next;
				mes "[Sir Andrew]";
				mes "Impressionnant... !";
				mes "En y réfléchissant bien,";
				mes "je ne pense pas que ta";
				mes "loyauté ait besoin";
				mes "d'être testée.";
				next;
				mes "[Sir Andrew]";
				mes "Veuillez aller voir mon confrère Chevalier, Sir Siracuse, car il vous donnera votre prochain test. Bien joué pour avoir maîtrisé le métier d'Épéiste.";
				set KNIGHT_Q,4;
				changequest 9000,9003;
				close;
			}
			mes "[Sir Andrew]";
			mes "Sans";
			mes "plus tarder,";
			mes "commençons !";
			mes "Allez et rassemblez les";
			mes "objets suivants...";
			next;
			mes "[Sir Andrew]";
			switch(rand(1,2)) {
				// Elder_Pixie's_Beard, Wing_Of_Red_Bat, Orcish_Voucher, Moth_Dust, Reptile_Tongue, Wild_Boar's_Mane
				case 1: setarray .@items[0], 1040,5, 7006,5, 931,5, 1057,5, 903,5, 1028,5, 2; break;
				// Short_Leg, Heart_Of_Mermaid, Blossom_Of_Maneater, Flesh_Of_Clam, Old_Frying_Pan, Snail's_Shell
				case 2: setarray .@items[0], 1042,5, 950,5, 1032,5, 966,5, 7031,5, 946,5, 3; break;
			}
			set KNIGHT_Q,.@items[12];
			if (KNIGHT_Q == 2) changequest 9000,9001;
			else changequest 9000,9002;
			mes "^236B8E"+.@items[1]+" "+getitemname(.@items[0])+"^000000,";
			mes "^236B8E"+.@items[3]+" "+getitemname(.@items[2])+"^000000,";
			mes "^236B8E"+.@items[5]+" "+getitemname(.@items[4])+"^000000,";
			mes "^236B8E"+.@items[7]+" "+getitemname(.@items[6])+"^000000,";
			mes "^236B8E"+.@items[9]+" "+getitemname(.@items[8])+"^000000 et";
			mes "^236B8E"+.@items[11]+" "+getitemname(.@items[10])+"^000000,";
			next;
			mes "[Sir Andrew]";
			mes "Je serai";
			mes "ici en train";
			mes "d'attendre que";
			mes "vous apportiez les";
			mes "objets que j'ai énumérés.";
			mes "À bientôt~";
			close;
		}
		else {
			mes "[Sir Andrew]";
			mes "Eh bien, dans ce cas...";
			mes "Bonjour.";
			close;
		}
	}
	else if (KNIGHT_Q == 2 || KNIGHT_Q == 3) {
		mes "Bienvenue de retour~";
		mes "As-tu rassemblé";
		mes "tous les objets ?";
		mes "Vérifions cela...";
		next;
		switch(KNIGHT_Q) {
			// Elder_Pixie's_Beard, Wing_Of_Red_Bat, Orcish_Voucher, Moth_Dust, Reptile_Tongue, Wild_Boar's_Mane
			case 2: setarray .@items[0], 1040,5, 7006,5, 931,5, 1057,5, 903,5, 1028,5, 0; break;
			// Short_Leg, Heart_Of_Mermaid, Blossom_Of_Maneater, Flesh_Of_Clam, Old_Frying_Pan, Snail's_Shell
			case 3: setarray .@items[0], 1042,5, 950,5, 1032,5, 966,5, 7031,5, 946,5, 0; break;
		}
		if (countitem(.@items[0]) >= .@items[1] && countitem(.@items[2]) >= .@items[3] && countitem(.@items[4]) >= .@items[5] && countitem(.@items[6]) >= .@items[7] && countitem(.@items[8]) >= .@items[9] && countitem(.@items[10]) >= .@items[11]) {
			mes "[Sir Andrew]";
			mes "Parfait ! Nous apprécions vos efforts pour rassembler ces objets. Ils seront utilisés pour soutenir les finances de la Chevalerie.";
			next;
			delitem .@items[0],.@items[1];
			delitem .@items[2],.@items[3];
			delitem .@items[4],.@items[5];
			delitem .@items[6],.@items[7];
			delitem .@items[8],.@items[9];
			delitem .@items[10],.@items[11];
			if (KNIGHT_Q == 2) changequest 9001,9003;
			else changequest 9002,9003;
			set KNIGHT_Q,4;
			mes "[Sir Andrew]";
			mes "Veuillez visiter mon confrère Chevalier, Sir Siracuse, et poursuivre les tests avec le dévouement et la loyauté que vous avez montrés aujourd'hui.";
			close;
		}
		mes "[Sir Andrew]";
		mes "Attends, attends...";
		mes "Je pense que tu";
		mes "manques encore certains";
		mes "objets. Au cas où tu";
		mes "aurais oublié, laisse-moi";
		mes "te le rappeler...";
		next;
		mes "[Sir Andrew]";
		mes "^236B8E"+.@items[1]+" "+getitemname(.@items[0])+"^000000,";
		mes "^236B8E"+.@items[3]+" "+getitemname(.@items[2])+"^000000,";
		mes "^236B8E"+.@items[5]+" "+getitemname(.@items[4])+"^000000,";
		mes "^236B8E"+.@items[7]+" "+getitemname(.@items[6])+"^000000,";
		mes "^236B8E"+.@items[9]+" "+getitemname(.@items[8])+"^000000 et";
		mes "^236B8E"+.@items[11]+" "+getitemname(.@items[10])+"^000000,";
		next;
		mes "[Sir Andrew]";
		mes "Maintenant, prends ce test au sérieux et avec sincérité.";
		mes "Je vais t'attendre";
		mes "pour accomplir cette tâche.";
		close;
	}
	else if (KNIGHT_Q == 4) {
		mes "Avais-tu quelque chose à me demander ? Tu devrais aller passer le prochain test. Dépêche-toi, Sir Siracuse t'attend~";
		close;
	}
	else if (KNIGHT_Q == 14) {
		mes "Tu dois avoir terminé tous les tests. Bien joué ! Tu devrais aller voir notre Capitaine pour que nous puissions tous donner notre évaluation.";
		close;
	}
	else {
		mes "Avais-tu quelque chose à me demander ? Tu devrais aller passer ton prochain test. Fais de ton mieux.";
		mes "Je sais que tu en es capable !";
		close;
	}
}

prt_in,71,91,0	script	Sir Siracuse#knt	65,{
	mes "[Sir Siracuse]";
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "Salut !";
			mes "Comment ça va ?";
			mes "La Chevalerie se porte";
			mes "assez bien.";
			next;
			mes "[Sir Siracuse]";
			mes "Nous avons";
			mes "testé de nouveaux membres,";
			mes "mais tous ne montrent pas";
			mes "autant de promesses";
			mes "que toi.";
			next;
			mes "[Sir Siracuse]";
			mes "J'espère que ces nouveaux membres se comporteront bien et ne";
			mes "feront pas honte à la Chevalerie.";
			next;
			mes "[Sir Siracuse]";
			mes "Si tu vois l'un des nouveaux se comporter de manière indigne d'un Chevalier, réprimande-le pour moi, s'il te plaît ?";
			close;
		}
		else if (BaseClass == Job_Novice) {
			mes "Oh ?";
			mes "Qu'est-ce qu'un Novice";
			mes "fait ici ?";
			next;
			mes "[Sir Siracuse]";
			mes "Tu es intéressé par devenir un Chevalier ? Tu ne peux pas passer directement de Novice à Chevalier, tu sais.";
			next;
			mes "[Sir Siracuse]";
			mes "D'abord, tu dois";
			mes "devenir un Épéiste";
			mes "expérimenté avant de";
			mes "pouvoir envisager";
			mes "de devenir un Chevalier.";
			close;
		}
		else {
			mes "Attaque et défense.";
			mes "Existe-t-il un moyen d'avoir les deux sans compromettre l'un ou l'autre ?";
			next;
			mes "[Sir Siracuse]";
			mes "Les armes à deux mains améliorent considérablement";
			mes "l'attaque mais diminuent les défenses. Y a-t-il quelque chose qui puisse compenser cette faiblesse ?";
			next;
			mes "[Sir Siracuse]";
			mes "Une arme ou une technique de ce genre";
			mes "aiderait grandement les Chevaliers...";
			close;
		}
	}
	if (KNIGHT_Q == 0) {
		mes "Attaque et défense.";
		mes "Existe-t-il un moyen d'avoir les deux sans compromettre l'un ou l'autre ?";
		next;
		mes "[Sir Siracuse]";
		mes "Les armes à deux mains améliorent considérablement";
		mes "l'attaque mais diminuent les défenses. Y a-t-il quelque chose qui puisse compenser cette faiblesse ?";
		next;
		mes "[Sir Siracuse]";
		mes "Une arme ou une technique de ce genre";
		mes "aiderait grandement les Chevaliers...";
		close;
	}
	else if (KNIGHT_Q == 1) {
		mes "Hein ?";
		mes "As-tu";
		mes "quelque chose à";
		mes "me demander ?";
		next;
		if (select("Je voudrais passer le test pour changer de métier. : Oh, rien.") == 1) {
			mes "[Sir Siracuse]";
			mes "Oh, pour devenir";
			mes "un Chevalier ? Viens à";
			mes "penser à cela, n'es-tu pas";
			mes "la "+((Sex==SEX_MALE)?"personne":"fille")+" qui vient de postuler ?";
			next;
			mes "[Sir Siracuse]";
			mes "Voyons...";
			mes "Ton nom était";
			mes strcharinfo(0) + ".";
			next;
			mes "[Sir Siracuse]";
			mes "Mais, avant de venir me voir, tu dois visiter les autres. À";
			mes "mon avis, tu n'as pas encore prouvé que tu connais les bases. Mais je";
			mes "réévaluerai une fois que tu";
			mes "auras passé le premier test.";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Hmmm... ?";
		mes "D'accord.";
		mes "C'est juste que";
		mes "tu avais cette";
		mes "expression sur ton";
		mes "visage.";
		close;
	}
	else if (KNIGHT_Q == 2 || KNIGHT_Q == 3) {
		mes "Hein ?";
		mes "As-tu";
		mes "quelque chose à";
		mes "me demander ?";
		next;
		if (select("Je voudrais passer le test pour changer de métier. : Oh, rien.") == 1) {
			mes "[Sir Siracuse]";
			mes "Hahaha~ !";
			mes "Ne devrais-tu pas passer le test d'Andrew ? Tu ne peux pas simplement le sauter, tu sais ! Tous nos tests sont importants.";
			next;
			mes "[Sir Siracuse]";
			mes "Parle d'abord à Sir Andrew.";
			mes "Mon test pour toi viendra après que tu aies terminé son test.";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Hmmm... ?";
		mes "D'accord.";
		mes "C'est juste que";
		mes "tu avais cette";
		mes "expression sur ton";
		mes "visage.";
		close;
	}
	else if (KNIGHT_Q == 4 || KNIGHT_Q == 5) {
		if (KNIGHT_Q == 4) {
			mes "Oh ?";
			mes "As-tu";
			mes "quelque chose à";
			mes "me demander ?";
			next;
			if (select("Sir Andrew m'a envoyé pour passer votre test. : Oh, rien.") == 1) {
				mes "[Sir Siracuse]";
				mes "Ah, je vois, tu as réussi le premier test. Très bien, je vais te consacrer un peu de temps. Permettez-moi de me présenter. Je m'appelle James Siracuse.";
				next;
				mes "[Sir Siracuse]";
				mes "Ce test mesurera combien tu sais sur la chevalerie. Plus important encore, je veux connaître tes pensées sur l'honneur.";
				next;
				mes "[Sir Siracuse]";
				mes "Ne sois pas nerveux, je ne te retiendrai pas trop longtemps. Ce seront des questions rapides. De plus, tu dois encore voir les autres, n'est-ce pas ?";
				next;
				mes "[Sir Siracuse]";
				mes "Eh bien,";
				mes "commençons.";
				mes "Réponds";
				mes "promptement.";
				next;
			}
			else {
				mes "[Sir Siracuse]";
				mes "Hmmm... ?";
				mes "D'accord.";
				mes "C'est juste que";
				mes "tu avais cette";
				mes "expression sur ton";
				mes "visage.";
				close;
			}
		}
		else if (KNIGHT_Q == 5) {
			mes "Quoi...";
			mes "Toi encore ?";
			next;
			if (select("Je souhaite passer le test à nouveau. : Oh, rien.") == 1) {
				mes "[Sir Siracuse]";
				mes "C'est ça ?";
				mes "Es-tu sûr d'être";
				mes "prêt cette fois-ci ?";
				next;
				mes "[Sir Siracuse]";
				mes "D'accord alors,";
				mes "allons-y de nouveau...";
				next;
			}
			else {
				mes "[Sir Siracuse]";
				mes "Hmmm... ?";
				mes "D'accord.";
				mes "C'est juste que";
				mes "tu avais cette";
				mes "expression sur ton";
				mes "visage.";
				close;
			}
		}
		mes "[Sir Siracuse]";
		mes "Un Chevalier doit posséder une grande force, une défense, une vitesse, et la compétence pour manier une épée à deux mains. Quelle arme parmi les suivantes n'est pas affectée par la compétence Two Hand Quicken ?";
		next;
		if (select("Katana : Slayer : Broadsword : Flamberge") != 4) {
			set KNIGHT_Q,5;
			mes "[Sir Siracuse]";
			mes "Faux !";
			mes "C'est une épée à deux mains !";
			mes "Es-tu sûr de vouloir être un Chevalier ? Tu ne connais même pas les bases...";
			next;
			mes "[Sir Siracuse]";
			mes "Si tu n'es pas sûr de quelque chose, va en ville et demande à n'importe quel Chevalier. Tu dois en apprendre davantage sur les Chevaliers avant de postuler pour le travail !";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Bien, laisse-moi maintenant te poser quelques questions sur les compétences. Laquelle des compétences suivantes n'est pas nécessaire pour apprendre Bowling Bash ?";
		next;
		if (select("Two Handed Sword Mastery Lv.5:Magnum Break Lv.3:Provoke Lv.10:Bash Lv.10") != 3) {
			set KNIGHT_Q,5;
			mes "[Sir Siracuse]";
			mes "Faux !";
			mes "Tu as besoin de cela pour apprendre Bowling Bash ! Tu devrais en apprendre davantage sur la classe Chevalier avant de postuler pour le travail !";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Les Chevaliers peuvent également utiliser des lances, contrairement à d'autres classes, et ont aussi des compétences liées aux lances. Quelles compétences ne sont pas nécessaires pour apprendre la compétence Brandish Spear ?";
		next;
		if (select("Pierce Lv.5:Spear Stab Lv.3:Spear Boomerang Lv.3:Peco Peco Ride Lv.1") != 3) {
			set KNIGHT_Q,5;
			mes "[Sir Siracuse]";
			mes "Faux ! Tu dois apprendre cela pour apprendre Brandish Spear ! Comment peux-tu ne pas connaître les Chevaliers si tu veux en devenir un ?";
			next;
			mes "[Sir Siracuse]";
			mes "Si tu n'es pas sûr de quelque chose, va en ville et demande à n'importe quel Chevalier";
			mes "de l'aide. Reviens après avoir appris davantage sur les Chevaliers.";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Certaines lances ont également des attributs magiques, tout comme des sorts. Parmi les suivantes, laquelle peut attaquer un Cauchemar, qui a l'attribut Fantôme ?";
		next;
		if (select("Zephyrus:Lance:Bill Guisarme:Crescent Scythe") != 1) {
			set KNIGHT_Q,5;
			mes "[Sir Siracuse]";
			mes "Faux ! Tu ne feras absolument aucun dégât avec ce type de lance ! Reviens après avoir appris davantage sur les Chevaliers !";
			next;
			mes "[Sir Siracuse]";
			mes "Si tu as une question, demande simplement à n'importe quel Chevalier en ville. C'est une connaissance de base pour nous !";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Lorsque tu deviens Chevalier, tu peux monter un Peco Peco. Cependant, ta vitesse d'attaque diminue une fois que tu es monté sur un Peco Peco.";
		next;
		mes "[Sir Siracuse]";
		mes "Cependant, tu peux contrebalancer cette diminution de vitesse en apprenant la compétence Cavalier Mastery. À quel pourcentage de ta vitesse d'attaque normale auras-tu droit après avoir appris le Cavalier Mastery de niveau 3 ?";
		next;
		if (select("70 % de la vitesse d'attaque normale:80 % de la vitesse d'attaque normale:90 % de la vitesse d'attaque normale:100 % de la vitesse d'attaque normale") != 2) {
			set KNIGHT_Q,5;
			mes "[Sir Siracuse]";
			mes "Faux !";
			mes "N'embête pas à monter un Peco Peco si tu ne sais rien sur le Cavalier Mastery !";
			next;
			mes "[Sir Siracuse]";
			mes "Tu ferais bien de revenir après avoir appris un peu plus sur les Chevaliers !";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Bien, bien...";
		mes "Je suis assez sûr que tu connais une quantité décente de choses sur les Chevaliers. Maintenant, laisse-moi te poser quelques questions personnelles sur les Chevaliers.";
		next;
		mes "[Sir Siracuse]";
		mes "Que devrais-tu faire lorsque tu rencontres un Novice demandant de l'aide en ville ?";
		next;
		switch(select("Dis à la Novice d'aller dans une zone de chasse raisonnable.:Laisse la Novice combattre pendant que tu prends les dégâts.:Donne à la Novice une bonne somme de Zeny et des objets.")) {
			case 1:
				mes "[Sir Siracuse]";
				mes "Bien sûr, même un Novice doit apprendre à être indépendant. Donner de bons conseils aux Novices est l'une des meilleures choses que nous puissions faire.";
				next;
				break;
			case 2:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Tu as une mauvaise idée. Crois-tu vraiment que c'est aider le Novice ? Donne à un homme un poisson, il mangera un jour. Apprends-lui à pêcher, il mangera toute sa vie !";
				close;
			case 3:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Crois-tu vraiment que cela aidera vraiment le pauvre Novice ? C'est généreux mais, il ne connaîtra pas la vraie valeur des Zeny et des objets tant qu'il ne les aura pas gagnés lui-même.";
				close;
		}
		mes "[Sir Siracuse]";
		mes "D'accord...";
		mes "Maintenant, comment devrais-tu agir dans un groupe ?";
		next;
		switch(select("Protéger tout le monde à l'avant du combat.:Rassemble les monstres et détruis-les d'un coup.:Obtiens autant d'objets que possible, à tout prix.")) {
			case 1:
				mes "[Sir Siracuse]";
				mes "C'est ça ! Notre force et nos attaques sont très importantes dans un groupe. Tous les Chevaliers devraient s'engager dans une bataille avec cette mentalité.";
				next;
				break;
			case 2:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Tu es fou ? Ne réalises-tu pas la faille dans ce genre de pensée ? Tu ne peux pas contrôler de grands groupes de monstres. Que se passe-t-il s'ils te tuent ? Qui protégera les innocents ?";
				close;
			case 3:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Je vois ta cupidité et nous n'en voulons pas ici ! Il semble que tu ne te soucies pas vraiment des autres !";
				mes "Dégage !";
				close;
		}
		mes "[Sir Siracuse]";
		mes "Enfin...";
		mes "quelle est la";
		mes "valeur la plus";
		mes "importante";
		mes "qu'un Chevalier doit avoir ?";
		next;
		switch(select("Honneur:Richesse:Statut")) {
			case 1:
				mes "[Sir Siracuse]";
				mes "Exact, par-dessus tout, les Chevaliers doivent être honorables ! Nous vivons et mourons pour l'honneur ! Garde toujours cela à l'esprit.";
				next;
				break;
			case 2:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Tu es une ordure ! Tu cherches à devenir Chevalier pour la richesse personnelle ? Dégage ! Nous n'accepterons pas quelqu'un comme toi dans notre Chevalerie !";
				close;
			case 3:
				set KNIGHT_Q,5;
				mes "[Sir Siracuse]";
				mes "Donc tu essaies de devenir célèbre grâce à la Chevalerie ? C'est pathétique. Nous n'accepterons pas quelqu'un comme toi dans notre Chevalerie !";
				close;
		}
		set KNIGHT_Q,6;
		changequest 9003,9004;
		mes "[Sir Siracuse]";
		mes "Eh bien,";
		mes "c'est la";
		mes "fin de mon test.";
		next;
		mes "[Sir Siracuse]";
		mes "Pour ton prochain";
		mes "test, va voir";
		mes "Sir Windsor.";
		mes "Il est très silencieux,";
		mes "mais ne te laisse pas";
		mes "abattre par cela.";
		close;
	}
	else if (KNIGHT_Q == 6) {
		mes "Oh ?";
		mes "Tu as quelque chose à";
		mes "me demander ?";
		next;
		if (select("Je voudrais passer le test pour changer de métier.:Oh, rien.") == 1) {
			mes "[Sir Siracuse]";
			mes "Hé...";
			mes "Tu as déjà passé mon test, n'est-ce pas ? Tu as fini ici. Tu devrais aller voir Sir Windsor maintenant...";
			close;
		}
		mes "[Sir Siracuse]";
		mes "Hmmm... ?";
		mes "D'accord.";
		mes "C'est juste que";
		mes "tu avais ce";
		mes "regard sur ton";
		mes "visage.";
		close;
	}
	else if (KNIGHT_Q == 14) {
		mes "Mmm... ?";
		mes "Tu as terminé";
		mes "les tests de tout le";
		mes "monde également ?";
		next;
		mes "[Sir Siracuse]";
		mes "Eh bien,";
		mes "va voir le";
		mes "capitaine. Nous serons";
		mes "tous là pour évaluer";
		mes "ta performance.";
		close;
	}
	else {
		mes "Salut encore.";
		mes "Avais-tu besoin de quelque chose ?";
		mes "Désolé, mais je suis occupé pour le moment. Tu devrais aller et finir le reste de tes tests.";
		close;
	}
}

prt_in,79,94,4	script	Sir Windsor#knt	733,{
	mes "[Sir Windsor]";
	mes "...";
	next;
	mes "[Sir Windsor]";
	mes "...";
	mes "......";
	next;
	mes "[Sir Windsor]";
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) mes "Protège.";
		else if (BaseClass == Job_Novice) {
			mes "...Va jouer";
			mes "dehors.";
		}
		else mes "...Hmpf.";
		close;
	}
	if (KNIGHT_Q == 0) {
		mes "...Quoi ?";
		close;
	}
	else if (KNIGHT_Q >= 1 && KNIGHT_Q <= 5) {
		mes "...Quoi ?";
		next;
		if (select("Je voudrais passer le test pour changer de métier.:Oh, rien.") == 1) {
			mes "[Sir Windsor]";
			mes "...";
			next;
			mes "[Sir Windsor]";
			mes "...";
			mes "......";
			next;
			mes "[Sir Windsor]";
			mes "...Ce n'est pas mon tour.";
			close;
		}
		mes "[Sir Windsor]";
		mes "...";
		close;
	}
	else if (KNIGHT_Q == 6 || KNIGHT_Q == 7) {
		if (KNIGHT_Q == 6) {
			set .@mes$,"Sir Siracuse m'a envoyé vers toi.:Oh, rien.";
			mes ".....Quoi ?";
			next;
		}
		else {
			set .@mes$,"Je veux essayer de nouveau !:...";
			next;
		}
		if (select(.@mes$) == 1) {
			mes "[Sir Windsor]";
			mes "...";
			next;
			set KNIGHT_Q,7;
			if (checkquest(9004) != -1) {
				changequest 9004,9005;
			}
			mes "[Sir Windsor]";
			mes "...";
			mes "......";
			next;
			mes "[Sir Windsor]";
			if (KNIGHT_Q == 6) 
				mes "...Suis-moi.";
			else {
				mes "...D'accord.";
				next;
				mes "[Sir Windsor]";
				mes "...Par ici.";
			}
			close2;
			if(checkquest(9006) == -1) changequest 9005,9006;
			warp "job_knt",89,101;
			end;
		}
		mes "[Sir Windsor]";
		mes "...";
		close;
	}
	else if (KNIGHT_Q == 14) {
		mes "...Parle";
		mes "au capitaine.";
		close;
	}
	else {
		mes "...Tu as";
		mes "fini ici.";
		close;
	}
}

// Test 2 part 1
//==========================================================
job_knt,89,106,4	script	Knight Windsor#knt	733,{
	mes "[Sir Windsor]";
	mes "...";
	next;
	mes "[Sir Windsor]";
	mes "...";
	mes "......";
	next;
	mes "[Sir Windsor]";
	mes "...Question ?";
	next;
	set .@i, select("Quel genre de test est-ce ?:Comment puis-je passer le test ?:J'aimerais partir.:Non.");
	mes "[Sir Windsor]";
	mes "...";
	if (.@i == 4) close;
	next;
	mes "[Sir Windsor]";
	mes "...";
	mes "......";
	switch(.@i) {
	case 1:
		next;
		mes "[Sir Windsor]";
		mes "...Tu combats des monstres.";
		next;
		mes "[Sir Windsor]";
		mes "...Tue-les tous.";
		next;
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...Trois étapes.";
		mes "Bats-les toutes.";
		next;
		mes "[Sir Windsor]";
		mes "......3 minutes";
		mes "pour chaque étape.";
		next;
		mes "[Sir Windsor]";
		mes "..........";
		close;
	case 2:
		next;
		mes "[Sir Windsor]";
		mes "...Va dans la";
		mes "salle d'attente.";
		next;
		mes "[Sir Windsor]";
		mes "...Ensuite,";
		mes "ça commencera.";
		next;
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...Tu dois attendre";
		mes "si quelqu'un est en test.";
		next;
		mes "[Sir Windsor]";
		mes "...Tu peux y aller";
		mes "après cette personne.";
		next;
		mes "[Sir Windsor]";
		mes "...";
		close;
	case 3:
		close2;
		warp "prt_in",80,100;
		end;
	}
}

job_knt,89,106,4	script	Windsor Benedict#knt	733,{
	end;

OnInit:
	//disablenpc  "Windsor Benedict#knt";
	hideonnpc "Windsor Benedict#knt";
	waitingroom "Waiting Room",20,"Windsor Benedict#knt::OnStartArena",1;
	enablewaitingroomevent;
	end;

OnStartArena:
	killmonster "job_knt", "Knight1::OnMyMobDead";
	killmonster "job_knt", "Knight2::OnMyMobDead";
	killmonster "job_knt", "Knight3::OnMyMobDead";
	warpwaitingpc "job_knt",43,146;
	donpcevent "Knight1::OnEnable";
	disablewaitingroomevent;
	end;

OnStart:
	enablewaitingroomevent;
	end;
}

-	script	Knight1	-1,{
OnInit:
	disablenpc "Knight1";
	end;

OnEnable:
	enablenpc "Knight1";
	if (!checkre(0)) {
		set .MyMobs,12;
		monster "job_knt",39,150,"Dustiness",1114,1,"Knight1::OnMyMobDead";
		monster "job_knt",47,150,"Dustiness",1114,1,"Knight1::OnMyMobDead";
		monster "job_knt",39,142,"Dustiness",1114,1,"Knight1::OnMyMobDead";
		monster "job_knt",47,142,"Dustiness",1114,1,"Knight1::OnMyMobDead";
	}
	else
		set .MyMobs,8;
	monster "job_knt",43,137,"Piere",1160,1,"Knight1::OnMyMobDead";
	monster "job_knt",43,137,"Andre",1095,1,"Knight1::OnMyMobDead";
	monster "job_knt",43,137,"Deniro",1105,1,"Knight1::OnMyMobDead";
	monster "job_knt",43,155,"Piere",1160,1,"Knight1::OnMyMobDead";
	monster "job_knt",43,155,"Andre",1095,1,"Knight1::OnMyMobDead";
	monster "job_knt",43,155,"Deniro",1105,1,"Knight1::OnMyMobDead";
	monster "job_knt",35,146,"Argos",1100,1,"Knight1::OnMyMobDead";
	monster "job_knt",52,146,"Argos",1100,1,"Knight1::OnMyMobDead";
	initnpctimer;
	end;

OnDisable:
	killmonster "job_knt", "Knight1::OnMyMobDead";
	disablenpc "Knight1";
	end;

OnMyMobDead:
	set .MyMobs,.MyMobs-1;
	if (.MyMobs < 1) {
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...Passons";
		mes "au niveau suivant.";
		close2;
		warp "job_knt",43,52;
		donpcevent "Knight1::OnDisable";
		donpcevent "Knight2::OnEnable";
		stopnpctimer;
	}
	end;

OnTimer180000:
	donpcevent "Knight1::OnDisable";
	end;

OnTimer181000:
	areawarp "job_knt", 24, 126, 63, 165, "prt_in",80,100;
	end;

OnTimer182000:
	stopnpctimer;
	donpcevent "Knight1::OnDisable";
	donpcevent "Windsor Benedict#knt::OnStart";
	end;
}

// Test 2 part 2
//==========================================================
-	script	Knight2	-1,{
OnInit:
	disablenpc "Knight2";
	end;

OnEnable:
	enablenpc "Knight2";
	if (!checkre(0)) {
		set .MyMobs,12;
		monster "job_knt",43,42,"Desert Wolf",1106,1,"Knight2::OnMyMobDead";
		monster "job_knt",43,62,"Desert Wolf",1106,1,"Knight2::OnMyMobDead";
		monster "job_knt",60,68,"Anacondaq",1030,1,"Knight2::OnMyMobDead";
		monster "job_knt",27,68,"Anacondaq",1030,1,"Knight2::OnMyMobDead";
		monster "job_knt",60,35,"Anacondaq",1030,1,"Knight2::OnMyMobDead";
		monster "job_knt",27,35,"Anacondaq",1030,1,"Knight2::OnMyMobDead";
	}
	else
		set .MyMobs,6;
	monster "job_knt",53,52,"Frilldora",1119,1,"Knight2::OnMyMobDead";
	monster "job_knt",34,52,"Frilldora",1119,1,"Knight2::OnMyMobDead";
	monster "job_knt",58,52,"Drainliar",1111,1,"Knight2::OnMyMobDead";
	monster "job_knt",58,52,"Drainliar",1111,1,"Knight2::OnMyMobDead";
	monster "job_knt",29,52,"Drainliar",1111,1,"Knight2::OnMyMobDead";
	monster "job_knt",29,52,"Drainliar",1111,1,"Knight2::OnMyMobDead";
	initnpctimer;
	end;

OnDisable:
	killmonster "job_knt", "Knight2::OnMyMobDead";
	disablenpc "Knight2";
	end;

OnMyMobDead:
	set .MyMobs,.MyMobs-1;
	if (.MyMobs < 1) {
		mes "[Sir Windsor]";
		mes "...Hmm.";
		next;
		mes "[Sir Windsor]";
		mes "...Encore une étape à gauche.";
		close2;
		warp "job_knt",143,152;
		donpcevent "Knight2::OnDisable";
		donpcevent "Knight3::OnEnable";
		stopnpctimer;
	}
	end;

OnTimer180000:
	donpcevent "Knight2::OnDisable";
	end;

OnTimer181000:
	areawarp "job_knt", 24, 32, 63, 71, "prt_in",80,100;
	end;

OnTimer182000:
	stopnpctimer;
	donpcevent "Knight2::OnDisable";
	donpcevent "Windsor Benedict#knt::OnStart";
	end;
}

// Test 2 part 3
//==========================================================
-	script	Knight3	-1,{
OnInit:
	disablenpc "Knight3";
	end;

OnEnable:
	enablenpc "Knight3";
	if (!checkre(0)) {
		set .MyMobs,7;
		monster "job_knt",147,167,"Goblin Archer",1258,1,"Knight3::OnMyMobDead";
		monster "job_knt",136,158,"Steam Goblin",1280,1,"Knight3::OnMyMobDead";
	}
	else
		set .MyMobs,5;
	monster "job_knt",136,152,"Goblin",1122,1,"Knight3::OnMyMobDead";
	monster "job_knt",150,152,"Goblin",1123,1,"Knight3::OnMyMobDead";
	monster "job_knt",143,145,"Goblin",1124,1,"Knight3::OnMyMobDead";
	monster "job_knt",143,167,"Goblin",1125,1,"Knight3::OnMyMobDead";
	monster "job_knt",139,167,"Goblin",1126,1,"Knight3::OnMyMobDead";
	initnpctimer;
	end;

OnDisable:
	killmonster "job_knt", "Knight3::OnMyMobDead";
	disablenpc "Knight3";
	end;

OnMyMobDead:
	set .MyMobs,.MyMobs-1;
	if (.MyMobs < 1) {
		mes "[Sir Windsor]";
		mes "...";
		next;
		mes "[Sir Windsor]";
		mes "...Très bien.";
		next;
		mes "[Sir Windsor]";
		mes "...Va parler à";
		mes "Amy Beatrice maintenant.";
		close2;
		set KNIGHT_Q,8;
		if(checkquest(9007) == -1) {
			changequest 9006,9007;
		}
		warp "prt_in",80,100;
		donpcevent "Knight3::OnDisable";
		donpcevent "Windsor Benedict#knt::OnStart";
		stopnpctimer;
	}
	end;

OnTimer180000:
	donpcevent "Knight3::OnDisable";
	end;

OnTimer181000:
	areawarp "job_knt", 124, 132, 163, 171, "prt_in",80,100;
	end;

OnTimer182000:
	stopnpctimer;
	donpcevent "Knight3::OnDisable";
	donpcevent "Windsor Benedict#knt::OnStart";
	end;
}

// Test 3 (Manners)
//==========================================================
prt_in,69,107,6	script	Lady Amy#knt	728,{
	mes "[Lady Amy]";
		if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "Oh...!";
			mes "Je me demande, pourquoi";
			mes "es-tu venu me rendre visite?";
			next;
			mes "[Lady Amy]";
			mes "Tu n'as pas de problèmes en tant que Chevalier,";
			mes "n'est-ce pas? Eh bien, je pense";
			mes "que tu t'en sors bien~";
			next;
			mes "[Lady Amy]";
			mes "Bien sûr~";
			mes "Tu fais partie de";
			mes "la Chevalerie de Prontera~";
			close;
		} else if (BaseClass == Job_Novice) {
			mes "Oh~";
			mes "Quel Novice mignon!";
			mes "Trop mignon!";
			next;
			mes "[Lady Amy]";
			mes "Heh heh...";
			mes "Es-tu intéressé";
			mes "à devenir un Chevalier";
			mes "plus tard? Tu serais";
			mes "un excellent Chevalier~";
			next;
			mes "[Lady Amy]";
			mes "N'oublie pas, tu vas";
			mes "devenir un Chevalier,";
			mes "d'accord? Promis?";
			close;
		} else {
			mes "Bienvenue à";
			mes "la Chevalerie de Prontera~";
			next;
			mes "[Lady Amy]";
			mes "Nous ne sommes que des Chevaliers,";
			mes "mais j'espère que tu apprécieras";
			mes "ton séjour ici.";
			mes "Heh heh~";
			close;
		}
	}
	if (KNIGHT_Q == 0) {
		mes "Oh, tu es";
		mes "un Épéiste...?";
		mes "Es-tu venu";
		mes "changer de job";
		mes "pour devenir";
		mes "un Chevalier?";
		next;
		mes "[Lady Amy]";
		mes "Pour postuler, parle";
		mes "au capitaine";
		mes "tout là-bas. Hee hee~";
		close;
	}
	else if (KNIGHT_Q >= 1 && KNIGHT_Q <= 7) {
		mes "Hmmm?";
		mes "Pourquoi es-tu";
		mes "venu voir Amy?";
		next;
		if (select("Je voudrais passer le test pour changer de job.:Oh, rien.") == 1) {
			mes "[Lady Amy]";
			mes "Mmm~";
			mes "Tu as postulé pour changer de job ! D'accord ! Tu seras bientôt un Chevalier avec ce genre de détermination !";
			next;
			mes "[Lady Amy]";
			mes "Mais...";
			mes "Tu dois aller voir";
			mes "les autres Chevaliers";
			mes "avant de parler à Amy.";
			next;
			mes "[Lady Amy]";
			mes "J'adorerais te tester";
			mes "depuis le début,";
			mes "mais je n'en ai pas le droit.";
			mes "Hee hee~";
			close;
		}
		mes "[Lady Amy]";
		mes "Oh~";
		mes "D'accord...";
		close;
	}
	else if ((KNIGHT_Q == 8) || (KNIGHT_Q == 9)){
		if (KNIGHT_Q == 8) {
			mes "Hmmm?";
			mes "Pourquoi es-tu";
			mes "venu voir Amy?";
			next;
			if (select("Sir Windsor m'a dit de--:Oh, rien.") == 1) {
				if (checkquest(9008) == -1) changequest 9007, 9008;
				mes "[Lady Amy]";
				mes "Oh !";
				mes "Pas besoin d'en dire";
				mes "plus.";
				mes "Bienvenue ! Il est temps";
				mes "de passer le test d'Amy !";
				next;
				mes "[Lady Amy]";
				mes "Je m'appelle Amy Beatrice,";
				mes "fière Dame Chevalier de la Chevalerie de Prontera. Le test d'Amy évaluera ton étiquette en tant que Chevalier~";
				next;
				mes "[Lady Amy]";
				mes "Je vais te raconter une histoire et tu choisis une réponse chaque fois";
				mes "que je pose une question. Ton étiquette sera évaluée en fonction de tes réponses.";
				next;
				mes "[Lady Amy]";
				mes "Alors écoute attentivement";
				mes "et réponds comme si tu étais";
				mes "déjà un Chevalier, d'accord ?";
				next;
				mes "[Lady Amy]";
				mes "Alors,";
				mes "commençons !";
				next;
			} else {
				mes "[Lady Amy]";
				mes "Oh...";
				mes "D'accord~";
				close;
			}
		} else if (KNIGHT_Q == 9) {
			mes "Hmmm?";
			mes "Pourquoi es-tu";
			mes "venu voir Amy?";
			next;
			if (select("Je voudrais passer le test pour changer de job.:Oh, rien.") == 1) {
				mes "[Lady Amy]";
				mes "Mmm~?";
				mes "As-tu appris";
				mes "ce que tu as mal fait";
				mes "la dernière fois ? Si tu";
				mes "échoues à nouveau, je vais";
				mes "être en colère !";
				next;
				mes "[Lady Amy]";
				mes "Alors écoute attentivement";
				mes "et réponds comme si tu";
				mes "étais un Chevalier.";
				mes "Eh bien alors,";
				mes "commençons !";
				next;
				mes "[Lady Amy]";
				mes "Tu es un Chevalier et tu cherches un groupe à Morroc.";
				mes "Comment t'y prendrais-tu ?";
				next;
			} else {
				mes "[Lady Amy]";
				mes "Oh...";
				mes "D'accord~";
				close;
			}
		}
		mes "Tu es un Chevalier et tu cherches un groupe à Morroc.";
		mes "Comment t'y prendrais-tu?";
		next;
		if (select("Crier que tu cherches un groupe.:Ouvrir une salle de discussion et attendre.:Chercher des personnes cherchant des Chevaliers.") != 1)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Tu as formé un groupe avec des joueurs de niveau équivalent. Il y a un Prêtre, un Magicien, un Chasseur, un Assassin et un Forgeron...";
		next;
		mes "[Lady Amy]";
		mes "Les six d'entre vous décident de partir à la chasse et ont choisi d'aller aux Pyramides.";
		next;
		mes "[Lady Amy]";
		mes "Vous atteignez le niveau 4";
		mes "des Pyramides";
		mes "avec votre groupe.";
		mes "Que devrais-tu faire?";
		next;
		if (select("Observer la zone et planifier à l'avance.:Rassembler des monstres pour les membres de ton groupe.:Guider lentement le groupe à l'avant.") != 2)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Mais des joueurs impolis sont venus avec un groupe de monstres et ont disparu ! Que devrais-tu faire?";
		next;
		if (select("Empêcher les monstres d'atteindre le groupe.:Défendre pendant que le groupe se retire.:S'enfuir sur ton Peco Peco.") != 3)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Heureusement, vous avez tous survécu à la crise. Mais en marchant, vous trouvez une personne, qui n'est pas dans votre groupe, écroulée au sol.";
		next;
		mes "[Lady Amy]";
		mes "La personne demande poliment de l'aide. Que devrais-tu faire?";
		next;
		if (select("Demander au Prêtre de ton groupe de l'aider.:Dire que tu l'aideras moyennant des Zeny.:Ignorer et continuer.") == 1)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Tu dois dire au revoir à tes membres de groupe parce que tu dois aller ailleurs.";
		next;
		mes "[Lady Amy]";
		mes "Mais tu trouves";
		mes "un objet rare pendant";
		mes "la bataille. Que";
		mes "devrais-tu faire?";
		next;
		if(select("Le donner à celui qui le mérite le plus.:Faire comme si rien ne s'était passé et le garder.:Décider avec le groupe à qui le donner.") != 2)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Tu te retrouves avec l'objet et tu vas à Prontera pour le vendre. Il y a beaucoup de gens avec des boutiques et des salles de discussion ouvertes vendant des objets.";
		next;
		mes "[Lady Amy]";
		mes "Que devrais-tu";
		mes "faire pour vendre ton objet?";
		next;
		if (select("Crier fort pour tout le monde.:Ouvrir une salle de discussion et attendre.:Demander s'il y a quelqu'un d'intéressé.") != 1)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Pendant que tu attends,";
		mes "quelqu'un vient et implore";
		mes "pour des objets et des Zeny.";
		mes "Que fais-tu?";
		next;
		if (select("Leur donner des Zeny et des objets.:Les ignorer tout simplement.:Donner des suggestions pour un lieu de chasse.") == 3)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Maintenant, tu décides d'aller au Temple Caché tout seul. Tu montes joyeusement sur ton Peco Peco.";
		next;
		mes "[Lady Amy]";
		mes "Mais tu tombes sur";
		mes "quelqu'un qui est perdu.";
		mes "Que devrais-tu faire?";
		next;
		if(select("Indiquer à la personne comment atteindre la sortie.:Guider la personne vers la sortie.:Donner une Butterfly Wing.") != 3)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Tu chasses depuis un moment, et maintenant tu as peu de HP !";
		mes "Il est maintenant rouge, ce qui est très dangereux.";
		next;
		mes "[Lady Amy]";
		mes "Ah, alors un Prêtre";
		mes "passe par là.";
		mes "Comment lui demanderais-tu";
		mes "un soin?";
		next;
		if (select("Serait-il possible d'obtenir un soin s'il te plaît?:Puis-je avoir un soin?:Soignez s'il vous plaît !!") == 1)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "Tu es maintenant très";
		mes "épuisé et il est temps";
		mes "de retourner en ville.";
		next;
		mes "[Lady Amy]";
		mes "Tu trouves alors";
		mes "un objet rare sur";
		mes "la rue.";
		mes "Que devrais-tu";
		mes "faire?";
		next;
		if (select("Le ramasser et le garder.:Demander autour pour trouver le propriétaire.:Continuer simplement ton chemin.") != 1)
			set .@knight_t, .@knight_t+10;
		mes "[Lady Amy]";
		mes "D'accord,";
		mes "c'était la";
		mes "fin de mon test !";
		next;
		mes "[Lady Amy]";
		if (.@knight_t == 100) {
			set KNIGHT_Q, 10;
			changequest 9008, 9009;
			mes "Bien joué, ce genre de mentalité est nécessaire pour un Chevalier ! Pour ton prochain test, rends visite à Sir Edmond, s'il te plaît~";
			next;
			mes "[Lady Amy]";
			mes "J'aurai de bons commentaires à faire au capitaine. Réussis bien aux tests qu'il te reste, d'accord ?";
			close;
		} else if (.@knight_t == 90) {
			set KNIGHT_Q, 10;
			changequest 9008, 9009;
			mes "Eh bien, ce n'était pas parfait,";
			mes "mais je pense que tu en sais assez";
			mes "sur l'étiquette pour être";
			mes "un bon Chevalier.";
			next;
			mes "[Lady Amy]";
			mes "Maintenant, il est temps d'aller voir Sir Edmond pour ton prochain test. Réussis bien le reste de tes tests. Tu ferais bien de promettre~";
			close;
		} else {
			set KNIGHT_Q, 9;
			mes "Mmm...";
			mes "Honnêtement, je ne pense pas que ton attitude soit assez bonne pour être un Chevalier pour le moment.";
			next;
			mes "[Lady Amy]";
			mes "Si tu agis vraiment comme ça, tout le monde pensera que les Chevaliers sont impolis ! Réfléchis à comment tu as répondu à mes questions et reviens plus tard.";
			next;
			mes "[Lady Amy]";
			mes "Si tu veux,";
			mes "je te permettrai";
			mes "de repasser le test, d'accord ?";
			close;
		}
	}
	else if (KNIGHT_Q == 10) {
		mes "Hmmm?";
		mes "Pourquoi es-tu";
		mes "venu voir Amy?";
		next;
		mes "[Lady Amy]";
		mes "Tu dois aller voir";
		mes "Sir Edmond pour ton";
		mes "prochain test, d'accord ?";
		close;
	} else if (KNIGHT_Q == 14) {
		mes "Wow~";
		mes "Maintenant c'est le moment";
		mes "pour tout le monde de décider";
		mes "de ton changement de job !";
		next;
		mes "[Lady Amy]";
		mes "Allons parler à notre";
		mes "capitaine. Ne t'inquiète";
		mes "pas trop. Ça devrait";
		mes "aller.";
		close;
	} else {
		mes "Hmmm?";
		mes "Pourquoi es-tu";
		mes "venu voir Amy?";
		next;
		mes "[Lady Amy]";
		mes "Tu as encore";
		mes "d'autres tests à passer.";
		mes "Hâte-toi et termine~";
		close;
	}
}

// Test 4 (patience)
//==========================================================
prt_in,70,99,6	script	Sir Edmond#knt	734,{
	mes "[Sir Edmond]";
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "Considère ton";
			mes "esprit comme s'il était";
			mes "de l'eau en mouvement.";
			next;
			mes "[Sir Edmond]";
			mes "L'eau en mouvement";
			mes "évite les obstacles,";
			mes "allant son chemin...";
			next;
			mes "[Sir Edmond]";
			mes "Les Chevaliers doivent être";
			mes "capables de surmonter les obstacles,";
			mes "comme l'eau calme, dans";
			mes "n'importe quelle situation.";
			close;
		}
		else if (BaseClass == Job_Novice) {
			mes "Les arbres aux racines profondes ne vacillent pas avec le vent. Le fait que des compétences puissantes doivent être construites sur des bases solides est immuable...";
			next;
			mes "[Sir Edmond]";
			mes "Ton avenir";
			mes "peut même être";
			mes "décidé maintenant...";
			close;
		}
		else {
			mes "Tout dans ce monde existe en harmonie. Vivre sans perturber cette harmonie est la bonne façon de vivre...";
			close;
		}
	}
	if (KNIGHT_Q == 0) {
		mes "Ceux avec des pensées sinistres ne feront que rêver de tels rêves. Il vaut mieux ne pas avoir de rêves du tout que d'avoir des rêves de tristesse et de désespoir.";
		close;
	}
	else if (KNIGHT_Q >= 1 && KNIGHT_Q <= 9) {
		mes "Qu'est-ce que c'est...";
		mes "Wandering Swordman ?";
		next;
		if (select("Je voudrais passer le test pour changer de job.:Oh, rien.") == 1) {
			mes "[Sir Edmond]";
			mes "Une graine doit d'abord être nichée";
			mes "dans la terre avant que la graine puisse germer. Ensuite, la pousse doit faire pousser des feuilles avant que ses bourgeons ne fleurissent en fleurs...";
			next;
			mes "[Sir Edmond]";
			mes "Sinon...";
			mes "La fleur sera";
			mes "incomplète.";
			next;
			mes "[Sir Edmond]";
			mes "Va voir les autres";
			mes "d'abord, afin que tu";
			mes "puisses trouver ton chemin...";
			close;
		}
		mes "[Sir Edmond]";
		mes "La vie que tu";
		mes "veux sera bientôt";
		mes "devant tes yeux.";
		mes "Tout viendra";
		mes "dans un ordre parfait.";
		close;
	}
	else if (KNIGHT_Q == 10) {
		mes "Qu'est-ce que c'est...";
		mes "Wandering Swordman.";
		next;
		if (select("Lady Amy m'a envoyé.:Oh, rien.") == 1) {
			mes "[Sir Edmond]";
			mes "Il est maintenant temps de passer mon test. Fais de ton mieux, comme tu l'as fait pour les autres tests.";
			next;
			mes "[Sir Edmond]";
			mes "Je m'appelle";
			mes "Edmond Groster.";
			mes "Je suis membre de";
			mes "la Chevalerie de Prontera.";
			next;
			mes "[Sir Edmond]";
			mes "Les Chevaliers sont dans une position où les autres les suivent. Par conséquent, tu dois humblement réfléchir à l'ordre du monde et avoir la personnalité adaptée au rôle que tu joueras.";
			next;
			mes "[Sir Edmond]";
			mes "Tu ne dois pas prendre des décisions négligentes. Ta volonté doit plier comme les roseaux ou être aussi ferme que la pierre lorsque la situation l'exige.";
			next;
			mes "[Sir Edmond]";
			mes "Tu ne dois pas tuer des monstres sans raison et ne pas prendre de plaisir à le faire. Prends le temps de réfléchir tranquillement à cela par toi-même...";
			next;
			mes "[Sir Edmond]";
			mes "Ensuite, nous allons";
			mes "commencer le test.";
			mes "Garde à l'esprit";
			mes "la qualité de";
			mes "la révérence.";
			close2;
			set KNIGHT_Q, 11;
			changequest 9009, 9010;
			warp "job_knt", 143, 57;
			end;
		}
		mes "[Sir Edmond]";
		mes "La vie que tu";
		mes "veux sera bientôt";
		mes "devant tes yeux.";
		close;
	} else if (KNIGHT_Q == 11) {
		mes "Qu'est-ce que c'est...";
		mes "Wandering Swordman ?";
		next;
		if (select("Je suis désolé, je n'ai pas voulu...:Oh, rien.") == 1) {
			mes "[Sir Edmond]";
			mes "Tu as été trop négligent dans le dernier test. L'épée d'un Chevalier existe pour protéger les autres, pas pour tourmenter des monstres plus faibles.";
			next;
			mes "[Sir Edmond]";
			mes "Dans un monde où tout existe en harmonie, tu ne peux pas avoir des humains détruisant continuellement sans but. Ce principe s'applique au monde réel, pas seulement à ce test.";
			next;
			mes "[Sir Edmond]";
			mes "Le test";
			mes "va commencer.";
			mes "Montre-moi ta";
			mes "patience...";
			close2;
			warp "job_knt", 143, 57;
			end;
		}
		mes "[Sir Edmond]";
		mes "La vie que tu";
		mes "veux sera bientôt";
		mes "devant tes yeux.";
		mes "Tout viendra";
		mes "dans un ordre parfait.";
		close;
	} else if (KNIGHT_Q == 12 || KNIGHT_Q == 13) {
		mes "J'ai vu ton caractère de mes propres yeux. Il est maintenant temps de passer le dernier test. Va parler";
		mes "à Sir Gray...";
		close;
	} else {
		mes "Va parler";
		mes "à notre capitaine.";
		mes "Le moment est venu";
		mes "pour que nous tous";
		mes "évaluions ta";
		mes "performance.";
		close;
	}
}

job_knt,1,1,1	script	Timer#knt	107,{
OnTimer300000:
	enablenpc "Warp#knt";
	end;

OnTimer300500:
	donpcevent "Timer#knt::OnDisable";
	disablenpc "Warp#knt";
	end;

OnTimer301500:
	stopnpctimer;
	donpcevent "Timer#knt::OnEnable";
	end;

OnInit:
OnEnable:
	enablenpc "Timer#knt";
	monster "job_knt",141,57,"Poring",1002,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",145,57,"Poring",1002,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",143,55,"Poring",1002,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",143,59,"Poring",1002,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",141,55,"Lunatic",1063,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",141,59,"Lunatic",1063,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",145,55,"Lunatic",1063,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",145,59,"Lunatic",1063,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",139,57,"Chonchon",1011,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",147,57,"Chonchon",1011,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",143,53,"Chonchon",1011,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",143,61,"Chonchon",1011,1,"Timer#knt::OnMyMobDead";
	//These monsters were out of bounds. Adjusted to put them in bounds.
	monster "job_knt",165,54,"Mushroom",1182,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",165,57,"Mushroom",1182,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",122,54,"Mushroom",1182,1,"Timer#knt::OnMyMobDead";
	monster "job_knt",122,57,"Mushroom",1182,1,"Timer#knt::OnMyMobDead";
	initnpctimer;
	end;

OnDisable:
	killmonster "job_knt","Timer#knt::OnMyMobDead";
	disablenpc "Timer#knt";
	disablenpc "Warp#knt";
	end;

OnMyMobDead:
	warp "prt_fild05",353,251;
	end;
}

job_knt,143,57,1	script	Warp#knt	107,22,22,{
OnInit:
	disablenpc "Warp#knt";
	end;
OnTouch_:
	set KNIGHT_Q,12;
	changequest 9010,9011;
	warp "prt_in",80,100;
	end;
}

// Test 5, and creates Claymores for knights
//==========================================================
prt_in,87,92,4	script	Sir Gray#knt	119,{
	mes "[Sir Gray]";
	if (BaseJob != Job_Swordman) {
		if (BaseJob == Job_Knight) {
			mes "L'éclat de lumière";
			mes "qui brille sur cette lame ne peut pas être mis en mots. C'est l'arme que chaque Chevalier doit avoir.";
			next;
			mes "[Sir Gray]";
			mes "Oui...";
			mes "^3355FFClaymore^000000!";
			mes "Chaque Chevalier";
			mes "en voudrait une !";
			next;
			switch(select("À propos de ^3355FFClaymore^000000:Acheter une Claymore:Terminer la conversation")) {
				case 1:
					mes "[Sir Gray]";
					mes "La Claymore, l'une des meilleures parmi les épées célèbres que tu peux obtenir à Prontera, Rune-Midgarts ! Sa valeur est inestimable lorsqu'elle est considérée par un Chevalier.";
					next;
					mes "[Sir Gray]";
					mes "Maintenant, la Chevalerie de Prontera fabrique ces fabuleuses Claymores. Pour les Chevaliers, elles coûtent seulement ^3355FF74,000^000000 Zeny.";
					next;
					mes "[Sir Gray]";
					mes "Mais ce n'est pas tout, tu as besoin";
					mes "d'1 ^3355FFAcier^000000 en raison des caractéristiques de la Claymore. Si tu veux, je peux en créer une pour toi. Pour l'honneur de la Chevalerie de Prontera !";
					close;
				case 2:
					if (MaxWeight - Weight < 1800) {
						mes "[Sir Gray]";
						mes "Oh non...";
						mes "Il semble que tu portes trop de choses. Tu n'as pas assez d'espace dans ton inventaire pour une lourde Claymore.";
						next;
						mes "[Sir Gray]";
						mes "Pourquoi ne pas";
						mes "organiser d'abord";
						mes "tes objets.";
						close;
					}
					else {
						if ((Zeny > 73999) && (countitem(999) > 0) && (BaseJob == Job_Knight)) {
							mes "[Sir Gray]";
							mes "Tu es prêt !";
							mes "Tu dois connaître la";
							mes "vraie valeur d'une";
							mes "^3355FFClaymore^000000 !";
							mes "Je vais la créer";
							mes "tout de suite !!";
							next;
							mes "[Sir Gray]";
							mes "Les bases de";
							mes "la création de la Claymore";
							mes "sont faciles. Regardez~ !";
							next;
							mes "^3355FF*Mélanger Mélanger*^000000";
							mes "^3355FF*Ooncha Ooncha*^000000";
							next;
							mes "[Sir Gray]";
							mes "D'accord, c'est prêt !";
							mes "La fierté de chaque Chevalier :";
							mes "une belle ^3355FFClaymore^000000.";
							mes "Tu as obtenu un objet fiable.";
							mes "Il sera un bon compagnon lors de tes aventures.";
							delitem 999,1; //Acier
							set Zeny, Zeny - 74000;
							getitem 1163,1; //Claymore
							close;
						}
						mes "[Sir Gray]";
						mes "Je comprends que tu veuilles vraiment une Claymore, mais je ne peux pas la fabriquer sans les matériaux.";
						mes "^3355FF74,000 zeny^000000 et ^3355FF1 Acier !^000000.";
						next;
						mes "[Sir Gray]";
						mes "Reviens quand";
						mes "tu auras tout";
						mes "prêt. Je t'attendrai...";
						close;
					}
				case 3:
					mes "[Sir Gray]";
					mes "N'importe quel Chevalier devrait être capable de manier une Claymore comme s'il s'agissait d'une extension de son corps. Je me réjouissais de brandir ma Claymore au combat...";
					close;
			}
		}
		else if (BaseClass == Job_Novice) {
			mes "Crois-le";
			mes "ou non, j'ai été";
			mes "une fois un Novice";
			mes "aussi.";
			next;
			mes "[Sir Gray]";
			mes "Je n'avais jamais vraiment prévu de devenir un Chevalier, mais j'avais décidé de devenir une personne forte. En quelque sorte, le long de mes voyages, j'ai fini par rejoindre la Chevalerie de Prontera. Ha ha ha !";
			close;
		}
		mes "Jeune homme,";
		mes "utilise ton temps";
		mes "sagement.";
		next;
		mes "[Sir Gray]";
		mes "Aucun intérêt à";
		mes "nourrir des regrets";
		mes "une fois que le temps a passé.";
		close;
	}
	if (KNIGHT_Q == 0) {
		mes "Jeune homme,";
		mes "utilise ton temps";
		mes "sagement.";
		next;
		mes "[Sir Gray]";
		mes "Aucun intérêt à";
		mes "nourrir des regrets";
		mes "une fois que le temps a passé.";
		close;
	}
	else if ((KNIGHT_Q == 12) || (KNIGHT_Q == 13)) {
		if (KNIGHT_Q == 12) {
			mes "Oh...";
			mes "Un jeune Épéiste.";
			mes "Oui, que puis-je";
			mes "faire pour toi?";
			next;
			if (select("Je voudrais passer le test pour changer de métier.:Oh, rien.") == 1) {
				mes "[Sir Gray]";
				mes "Hoho, je vois.";
				mes "Alors tu as passé";
				mes "le test de tout le monde?";
				next;
				mes "[Sir Gray]";
				mes "Alors commençons le mien?";
				mes "Ce n'est pas vraiment";
				mes "un test cependant.";
				next;
				mes "[Sir Gray]";
				mes "Parlons";
				mes "décontracté,";
				mes "d'accord?";
				next;
				mes "[Sir Gray]";
				mes "D'abord...";
				mes "Pourquoi as-tu";
				mes "décidé de devenir";
				mes "un Chevalier?";
				next;
			}
			else {
				mes "[Sir Gray]";
				mes "Prends soin de toi!";
				close;
			}
		}
		else if (KNIGHT_Q == 13) {
			mes "Ah, toi encore.";
			mes "Qu'est-ce qui";
			mes "t'amène vers moi?";
			next;
			if (select("J'ai beaucoup réfléchi.:Oh, rien.") == 1) {
				mes "[Sir Gray]";
				mes "C'est ainsi...";
				mes "Je me demande si tu";
				mes "as vraiment...";
				next;
				mes "[Sir Gray]";
				mes "Alors...";
				mes "Comme la dernière fois,";
				mes "je vais demander à nouveau...";
				next;
				mes "[Sir Gray]";
				mes "D'abord...";
				mes "Pourquoi as-tu";
				mes "décidé de devenir";
				mes "un Chevalier?";
				next;
			}
			else {
				mes "[Sir Gray]";
				mes "Prends soin de toi!";
				mes "La santé est";
				mes "le trésor de";
				mes "chaque homme!";
				close;
			}
		}
		switch(select("Pour devenir plus fort...:Pour aider ma guilde...:Parce que je ne suis pas satisfait de moi-même en ce moment...")) {
		case 1:
			mes "[Sir Gray]";
			mes "Pour devenir plus fort, tu dis ?";
			mes "Oui, les chevaliers sont effectivement forts.";
			mes "Mais pourquoi gagner en force ?";
			next;
			mes "[Sir Gray]";
			mes "Est-ce pour se vanter devant les autres ? Pour atteindre la renommée ? Ou as-tu une raison différente ? Qu'est-ce que tu penses de si bon à propos du gain de force en tant que chevalier ?";
			next;
			switch(select("Acquérir richesse et renommée.:Je peux me protéger.:Je peux protéger les autres.")) {
			case 1:
				set .@knight_t,.@knight_t+10;
				mes "[Sir Gray]";
				mes "Bien sûr, la richesse et la renommée ont leur place dans le monde. Mais nous, en tant que chevaliers, devons vivre pour des vertus supérieures.";
				next;
				break;
			case 2:
				mes "[Sir Gray]";
				mes "Bonne réflexion. Tu dois d'abord être capable de te protéger pour pouvoir protéger les autres. À cette fin, tu dois t'entraîner constamment et ne jamais céder à la paresse.";
				next;
				break;
			case 3:
				mes "[Sir Gray]";
				mes "Ah, une idée merveilleuse. La force d'un chevalier doit être utilisée pour protéger les faibles et défendre la justice.";
				next;
				mes "[Sir Gray]";
				mes "Malheureusement, il y a quelques chevaliers qui nous déshonorent en oubliant les idéaux qui devraient être fondamentaux pour la chevalerie...";
				next;
				break;
			}
			break;
		case 2:
			mes "[Sir Gray]";
			mes "Ah, aider ta guilde, ou peut-être même ton groupe. Notre sage et bienveillant roi Tristram le 3e nous a donné ces paroles dorées...";
			next;
			mes "[Sir Gray]";
			mes "^8B7500Au-delà de la rivière calme, se trouve une cascade dangereuse. Par conséquent, tu dois toujours être prêt à tout...^000000";
			next;
			mes "[Sir Gray]";
			mes "Alors, comment penses-tu";
			mes "que tu peux";
			mes "aider ta guilde ?";
			next;
			switch(select("Ma guilde a besoin de moi.:Je peux aider à rassembler des fonds pour ma guilde.:Je peux protéger les membres de ma guilde.")) {
			case 1:
				mes "[Sir Gray]";
				mes "N'importe qui, n'importe où dans ce monde,";
				mes "a un endroit où il est nécessaire. Ne néglige jamais quelqu'un dans le besoin, même s'il n'est pas membre de ta guilde.";
				next;
				break;
			case 2:
				set .@knight_t,.@knight_t+10;
				mes "[Sir Gray]";
				mes "Bien sûr, la richesse est importante.";
				mes "Mais nous, les chevaliers, devons vivre pour des vertus supérieures.";
				next;
				break;
			case 3:
				mes "[Sir Gray]";
				mes "Ah, une idée merveilleuse. La force d'un chevalier doit être utilisée pour protéger les faibles et défendre la justice.";
				next;
				mes "[Sir Gray]";
				mes "Malheureusement, il y a quelques chevaliers qui nous déshonorent en oubliant les idéaux qui devraient être fondamentaux pour la chevalerie...";
				next;
				break;
			}
			break;
		case 3:
			set .@knight_t,.@knight_t+5;
			mes "[Sir Gray]";
			mes "La satisfaction, tu dis.";
			mes "On dirait que tu es déjà";
			mes "un bon Épéiste.";
			mes "Y a-t-il une raison particulière pour laquelle tu veux devenir chevalier ?";
			next;
			mes "[Sir Gray]";
			mes "Je ne sais pas pour les";
			mes "Épéistes, mais les chevaliers n'autorisent pas l'auto-indulgence. Il y a ceux qui sont tellement obsédés par le gain de force qu'ils ne peuvent pas se contrôler eux-mêmes.";
			next;
			mes "[Sir Gray]";
			mes "Alors...";
			mes "Quelle partie de toi";
			mes "n'est pas satisfaite";
			mes "en ce moment ?";
			next;
			switch(select("Compétences.:Objectif.:Apparence.")) {
			case 1:
				set .@knight_t,.@knight_t+5;
				mes "[Sir Gray]";
				mes "La compétence est quelque chose que tu acquiers avec l'expérience en tant que chevalier. Ce ne peut pas être ton objectif principal. Sinon, tu ne seras jamais satisfait en tant que chevalier.";
				next;
				break;
			case 2:
				set .@knight_t,.@knight_t-5;
				mes "[Sir Gray]";
				mes "Je comprends...";
				mes "Avoir toujours un objectif est très important. Tu peux être plein d'idées en devenant chevalier, mais cela peut changer avec le temps.";
				next;
				break;
			case 3:
				set .@knight_t,.@knight_t+5;
				mes "[Sir Gray]";
				mes "Oh non...";
				mes "Ce que tu vois n'est pas ce qui compte vraiment. Un Épéiste peut être plus fort qu'un chevalier, et même un chevalier peut devenir faible s'il devient paresseux.";
				next;
				break;
			}
			break;
		}
		mes "[Sir Gray]";
		mes "Je comprends tes pensées,";
		mes "mais il y a ceux qui veulent";
		mes "devenir chevaliers sans réfléchir.";
		next;
		mes "[Sir Gray]";
		mes "Ce sont ceux qui provoquent des problèmes et déshonorent l'honneur des chevaliers, entraînant des résultats irréversibles.";
		next;
		mes "[Sir Gray]";
		mes "Il en va de même pour toi. Une fois que tu deviens chevalier, tu ne peux plus redevenir épéiste. Les devoirs et les responsabilités d'un chevalier seront toujours avec toi.";
		next;
		mes "[Sir Gray]";
		mes "Si tu deviens chevalier tout de suite, que vas-tu faire en premier ?";
		next;
		switch(select("Je vais directement au combat.:Il y a ceux qui m'attendent.:Je vais en apprendre davantage sur les chevaliers.")) {
		case 1:
			mes "[Sir Gray]";
			mes "Le combat... ?";
			mes "Et après ?";
			next;
			switch(select("Je vais grandir en peu de temps.:Je veux tester mes compétences en tant que chevalier.:Je veux aller dans des endroits plus difficiles.")) {
			case 1:
				set .@knight_t,.@knight_t+10;
				mes "[Sir Gray]";
				mes "Ne sois pas trop pressé de devenir fort. Même si tu deviens";
				mes "un chevalier, tu restes toi-même.";
				next;
				break;
			case 2:
				mes "[Sir Gray]";
				mes "Se tester soi-même est une bonne chose. Il est normal d'être heureux de voir comment tu changes, mais n'oublie pas les véritables qualités d'un chevalier.";
				next;
				break;
			case 3:
				mes "[Sir Gray]";
				mes "Même si tu deviens chevalier, tu ne changes pas ton moi intérieur. Pas besoin de te surmener.";
				mes "Détends-toi et prends les choses étape par étape.";
				next;
				break;
			}
			break;
		case 2:
			mes "[Sir Gray]";
			mes "Qui";
			mes "t'attend ?";
			next;
			switch(select("Mes amis.:Les membres de ma guilde.:Mon amour.")) {
			case 1:
				mes "[Sir Gray]";
				mes "Je vois, ils partageraient la joie de tes réussites. Ne perds jamais ton cœur généreux et donne toujours de l'aide à tes amis.";
				next;
				break;
			case 2:
				mes "[Sir Gray]";
				mes "Ceux qui partageraient ta joie et tes épreuves. En tant que chevalier, tu dois toujours les protéger.";
				next;
				break;
			case 3:
				mes "[Sir Gray]";
				mes "Oh, la jeunesse !";
				mes "Devenir chevalier";
				mes "pour ton bien-aimé !";
				mes "Protège toujours "+((Sex==SEX_MALE)?"elle":"lui")+"...";
				mes "Même au prix";
				mes "de ta propre vie !";
				next;
				mes "[Sir Gray]";
				mes "Aussi...";
				mes "Aime-les pour toujours.";
				mes "L'affection sincère";
				mes "est difficile à trouver.";
				next;
				break;
			}
			break;
		case 3:
			mes "[Sir Gray]";
			mes "Bonne attitude...";
			mes "Qu'as-tu l'intention";
			mes "d'apprendre ?";
			next;
			switch(select("Endroits confortables pour les chevaliers...:Les différents chemins d'un chevalier...:Les moyens de gagner plus d'argent en tant que chevalier...")) {
			case 1:
				set .@knight_t,.@knight_t+5;
				mes "[Sir Gray]";
				mes "Il y a de nombreux endroits confortables ou inconfortables dans ce monde. Cependant, les chevaliers doivent";
				mes "pouvoir survivre n'importe où.";
				next;
				break;
			case 2:
				mes "[Sir Gray]";
				mes "Il y a de nombreux chevaliers similaires à l'extérieur dans le monde. Considère-les comme tes aînés et pose-leur beaucoup de questions.";
				next;
				break;
			case 3:
				set .@knight_t,.@knight_t+15;
				mes "[Sir Gray]";
				mes "Oh non. Tiens-tu la richesse comme une priorité en tant que chevalier ? Nous ne sommes pas censés être ainsi. Reviens quand tu auras réfléchi";
				mes "plus à ce sujet...";
				next;
				break;
			}
			break;
		}
		mes "[Sir Gray]";
		mes "Oh non, nous avons";
		mes "trop parlé...";
		mes "Je m'excuse pour";
		mes "de t'avoir retenu";
		mes "ici si longtemps.";
		next;
		if (.@knight_t == 0) {
			set KNIGHT_Q,14;
			changequest 9011,9012;
			mes "[Sir Gray]";
			mes "J'ai apprécié parler avec toi. Tu me rappelles moi-même en tant que jeune recrue. Devrions-nous parler au capitaine et décider de ton";
			mes "changement de classe ?";
			next;
			mes "[Sir Gray]";
			mes "Ne t'inquiète pas trop, j'ai une très";
			mes "bonne opinion de toi.";
			mes "Maintenant, va~";
			close;
		}
		else if (.@knight_t == 5) {
			set KNIGHT_Q,14;
			changequest 9011,9012;
			mes "[Sir Gray]";
			mes "J'ai aimé discuter avec toi. Tu pourras réfléchir davantage aux principes de la chevalerie une fois que tu seras devenu chevalier.";
			next;
			mes "[Sir Gray]";
			mes "Alors, devrions-nous aller voir le capitaine et décider de ton changement de classe ? Ne t'inquiète pas trop. Tu es assez bon pour être un chevalier !";
			close;
		}
		else if (.@knight_t == 10) {
			set KNIGHT_Q,14;
			changequest 9011,9012;
			mes "[Sir Gray]";
			mes "J'ai aimé discuter avec toi. Bien que, il y avait quelques";
			mes "choses qui me préoccupaient...";
			next;
			mes "[Sir Gray]";
			mes "Tu devrais aller";
			mes "voir le capitaine";
			mes "pour que nous puissions décider";
			mes "de ton changement de classe.";
			next;
			mes "[Sir Gray]";
			mes "Ne t'inquiète pas trop, venir passer mon test signifie que les autres t'ont également reconnu.";
			mes "Va maintenant... !";
			close;
		}
		else {
			set KNIGHT_Q,13;
			mes "[Sir Gray]";
			mes "Discuter";
			mes "avec les jeunes";
			mes "est toujours agréable...";
			next;
			mes "[Sir Gray]";
			mes "Mais il semble que ton rêve soit ailleurs, ou que ton attention soit floue. Passe plus de temps en tant qu'épéiste, et reviens";
			mes "vers moi plus tard.";
			next;
			mes "[Sir Gray]";
			mes "Si tu veux vraiment devenir chevalier, tu dois d'abord changer ta perspective. Ensuite, nous verrons.";
			close;
		}
	}
	else if (KNIGHT_Q == 14) {
		mes "Je t'ai dit";
		mes "d'aller voir";
		mes "le capitaine.";
		next;
		mes "[Sir Gray]";
		mes "Chacun prendra";
		mes "sa décision avec";
		mes "précaution,";
		mes "alors va maintenant !";
		close;
	}
	else {
		mes "Oh...";
		mes "Un jeune Épéiste.";
		mes "Que puis-je faire pour toi ?";
		next;
		if (select("Je voudrais passer le test pour changer de classe. :Oh, rien.") == 1) {
			mes "[Sir Gray]";
			mes "Hoho~";
			mes "Il y a beaucoup";
			mes "d'autres jeunes";
			mes "chevaliers ici.";
			next;
			mes "[Sir Gray]";
			mes "Si tu parles";
			mes "à tous,";
			mes "je pourrais";
			mes "t'examiner aussi.";
			close;
		}
		mes "[Sir Gray]";
		mes "Prends soin de toi !";
		mes "La santé est";
		mes "le trésor de";
		mes "chaque homme !";
		close;
	}
}
